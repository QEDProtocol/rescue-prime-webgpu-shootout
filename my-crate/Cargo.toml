[package]
name = "my-crate"
version = "0.1.0"
authors = ["Nshen <nshen121@gmail.com>"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
cfg-if = "1.0.0"
wasm-bindgen = "0.2.63"
wasm-bindgen-futures = "0.4.42"
# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }
miden-crypto = { version = "0.8.4", default-features = false }
winter-math = { version = "0.8.3", default-features = false }
futures = "0.3.30"
wgpu = "0.19.3"
bytemuck = "1.15.0"
flume = "0.11.0"
once_cell = "1.19.0"
[dev-dependencies]
wasm-bindgen-test = "0.3.13"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"

[features]
# default = ["console_error_panic_hook" ,"wee_alloc"]
default = ["console_error_panic_hook"]



[dependencies.web-sys]
version = "0.3.4"
features = ['Window', 'Performance', 'PerformanceTiming']